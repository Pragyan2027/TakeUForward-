class Solution {
    private void solve(int sum, int last , List<Integer> nums , int k , List<List<Integer>>ans){
         if(sum == 0 && nums.size() == k){
            ans.add(new ArrayList<>(nums));
            return;
        }
        if(sum <= 0 || nums.size() > k) return;

        for(int i = last ; i <= 9 ; i++){
            if(i <= sum){
                nums.add(i);
                solve(sum - i , i+1 , nums , k ,ans);
                nums.remove(nums.size()-1);
            } else{
                break;
            }
        }
    }
    public List<List<Integer>> combinationSum3(int k, int n) {
        //your code goes here
       List<List<Integer>> ans = new ArrayList<>();
       List<Integer> nums = new ArrayList<>();

       solve(n , 1, nums , k , ans);
       return ans;
    }

}
